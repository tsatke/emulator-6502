use emulator_6502::cpu::{Cpu, CODE_START};
use emulator_6502::mem::Memory;

fn main() {
    let mut mem = Memory::new();

    [
        0xA0_u8, 0x14, 0xA9, 0x02, 0x85, 0x21, 0xF8, 0xAA, 0xB5, 0x30, 0xD0, 0x25, 0xA9, 0x20,
        0x85, 0x0F, 0x8A, 0x4A, 0x4A, 0x4A, 0x4A, 0xF0, 0x04, 0x09, 0x30, 0x85, 0x0F, 0x8A, 0x29,
        0x0F, 0x09, 0x30, 0x85, 0x0F, 0x88, 0xF0, 0x14, 0x18, 0x8A, 0x65, 0x21, 0xB0, 0x05, 0xAA,
        0x95, 0x30, 0xD0, 0xF7, 0x18, 0xA5, 0x21, 0x69, 0x01, 0x85, 0x21, 0xD0, 0xCE, 0xEA,
    ]
    .into_iter()
    .enumerate()
    .for_each(|(i, b)| {
        mem.write(CODE_START + i as u16, b);
    });

    let mut cpu = Cpu::new(mem);
    cpu.run(None);
}
